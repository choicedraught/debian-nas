---
- name: Configure SSH keypair on Pi.
  block:
    - name: Ensure .ssh directory exists on Pi.
      ansible.builtin.file:
        path: /home/pi/.ssh
        state: directory
        mode: 0700

    - name: Generate SSH keypair for pi user on Pi.
      community.crypto.openssh_keypair:
        path: /home/pi/.ssh/id_rsa_zfs
        type: rsa
        size: 4096
        state: present
        owner: pi
        group: pi

    - name: Retrieve SSH pubkey for pi user on Pi.
      ansible.builtin.slurp:
        src: /home/pi/.ssh/id_rsa_zfs.pub
      register: pi_zfs_pubkey

    - name: Accept hostkey for HL15 on Pi.
      ansible.builtin.known_hosts:
        name: nas01.mmoffice.net
        key: nas01.mmoffice.net ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGttqA5odftU8N9AN05zByZxOzcuHkNNRGcZQfsLT6V/
        path: /etc/ssh/ssh_known_hosts
        state: present

    # Check permissions with `zfs allow [pool/vol]`
    - name: Configure ZFS so pi user can perform ZFS actions.
      ansible.builtin.command:
        cmd: zfs allow -u pi compression,mountpoint,create,mount,receive,rollback,destroy ssdpool/backup
      changed_when: false
  run_once: true
  delegate_to: nas02.mmoffice.net

- name: Configure pi user on HL15.
  block:
    - name: Create pi user on HL15.
      ansible.builtin.user:
        name: pi
        shell: /bin/bash
        create_home: true
        state: present

    - name: Ensure pi user homedir is owned by pi.
      ansible.builtin.file:
        path: /home/pi
        owner: pi
        group: pi

    - name: Add pi user's SSH key to account on HL15.
      ansible.posix.authorized_key:
        user: pi
        state: present
        key: "{{ pi_zfs_pubkey['content'] | b64decode | trim }} pi@nas02"

    # Check permissions with `zfs allow [pool/vol]`
    - name: Configure ZFS so pi user can perform ZFS actions.
      ansible.builtin.command:
        cmd: "zfs allow -u pi send,hold,mount,snapshot,destroy {{ item }}"
      changed_when: false
      loop:
        - hddpool
        - nvmepool
  run_once: true
  delegate_to: nas01.mmoffice.net

- name: Configure nightly syncoid task on Pi.
  ansible.builtin.cron:
    name: "{{ item.name }}"
    minute: "13"
    hour: "{{ item.hour }}"
    job: >-
      /usr/sbin/syncoid
      --sshkey=/home/pi/.ssh/id_rsa_zfs
      --recursive
      --no-privilege-elevation
      {{ item.job }}
    user: pi
  loop:
    - name: "Nightly syncoid replication - jupiter"
      hour: "7"
      job: pi@nas01.mmoffice.net:hddpool/jupiter ssdpool/backup/jupiter
    - name: "Nightly syncoid replication - mercury"
      hour: "8"
      job: pi@nas01.mmoffice.net:nvmepool/mercury ssdpool/backup/mercury
  run_once: true
  delegate_to: nas02.mmoffice.net
